{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        phone: '',\n        password: ''\n      },\n      rules: {\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能小于6位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          try {\n            const {\n              data\n            } = await this.$http.post('/patient/login', this.loginForm);\n            if (data.code === 200) {\n              localStorage.setItem('token', data.data.token);\n              localStorage.setItem('userInfo', JSON.stringify(data.data.userInfo));\n              this.$message.success('登录成功');\n              this.$router.push('/home/departments');\n            } else {\n              this.$message.error(data.message);\n            }\n          } catch (error) {\n            this.$message.error('登录失败，请稍后重试');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","phone","password","rules","required","message","trigger","pattern","min","methods","handleLogin","$refs","validate","valid","$http","post","code","localStorage","setItem","token","JSON","stringify","userInfo","$message","success","$router","push","error"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">医院预约挂号系统</div>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\" label-width=\"0px\">\r\n        <el-form-item prop=\"phone\">\r\n          <el-input v-model=\"loginForm.phone\" prefix-icon=\"el-icon-user\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" type=\"password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" class=\"login-button\">登录</el-button>\r\n        </el-form-item>\r\n        <div class=\"register-link\">\r\n          还没有账号？<router-link to=\"/register\">立即注册</router-link>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        phone: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        phone: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            const { data } = await this.$http.post('/patient/login', this.loginForm)\r\n            if (data.code === 200) {\r\n              localStorage.setItem('token', data.data.token)\r\n              localStorage.setItem('userInfo', JSON.stringify(data.data.userInfo))\r\n              this.$message.success('登录成功')\r\n              this.$router.push('/home/departments')\r\n            } else {\r\n              this.$message.error(data.message)\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('登录失败，请稍后重试')\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n.register-link {\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.register-link a {\r\n  color: #409EFF;\r\n  text-decoration: none;\r\n}\r\n</style>\r\n"],"mappings":"AAuBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,KAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAX,SAAA,CAAAY,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA;cAAAd;YAAA,eAAAe,KAAA,CAAAC,IAAA,wBAAAf,SAAA;YACA,IAAAD,IAAA,CAAAiB,IAAA;cACAC,YAAA,CAAAC,OAAA,UAAAnB,IAAA,CAAAA,IAAA,CAAAoB,KAAA;cACAF,YAAA,CAAAC,OAAA,aAAAE,IAAA,CAAAC,SAAA,CAAAtB,IAAA,CAAAA,IAAA,CAAAuB,QAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,QAAA,CAAAI,KAAA,CAAA5B,IAAA,CAAAM,OAAA;YACA;UACA,SAAAsB,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}