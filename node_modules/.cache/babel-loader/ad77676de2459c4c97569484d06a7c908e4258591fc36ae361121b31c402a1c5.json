{"ast":null,"code":"export default {\n  name: 'Appointment',\n  data() {\n    return {\n      doctorInfo: {},\n      departmentInfo: {},\n      appointmentForm: {\n        appointmentDate: '',\n        timeSlot: '',\n        visitType: 1,\n        description: ''\n      },\n      rules: {\n        appointmentDate: [{\n          required: true,\n          message: '请选择就诊日期',\n          trigger: 'change'\n        }],\n        timeSlot: [{\n          required: true,\n          message: '请选择就诊时段',\n          trigger: 'change'\n        }],\n        visitType: [{\n          required: true,\n          message: '请选择就诊类型',\n          trigger: 'change'\n        }],\n        description: [{\n          required: true,\n          message: '请填写病情描述',\n          trigger: 'blur'\n        }]\n      },\n      timeSlots: [{\n        value: '1',\n        label: '上午 8:00-10:00'\n      }, {\n        value: '2',\n        label: '上午 10:00-12:00'\n      }, {\n        value: '3',\n        label: '下午 14:00-16:00'\n      }, {\n        value: '4',\n        label: '下午 16:00-18:00'\n      }],\n      dateOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 8.64e7;\n        }\n      },\n      registrationFee: 50\n    };\n  },\n  created() {\n    this.getDoctorInfo();\n  },\n  methods: {\n    async getDoctorInfo() {\n      try {\n        const {\n          data\n        } = await this.$http.get(`/doctors/${this.$route.params.doctorId}`);\n        if (data.code === 200) {\n          this.doctorInfo = data.data;\n          this.getDepartmentInfo(this.doctorInfo.dep_id);\n        } else {\n          this.$message.error(data.message);\n        }\n      } catch (error) {\n        this.$message.error('获取医生信息失败');\n      }\n    },\n    async getDepartmentInfo(depId) {\n      try {\n        const {\n          data\n        } = await this.$http.get(`/departments/${depId}`);\n        if (data.code === 200) {\n          this.departmentInfo = data.data;\n        }\n      } catch (error) {\n        this.$message.error('获取科室信息失败');\n      }\n    },\n    submitAppointment() {\n      this.$refs.appointmentForm.validate(async valid => {\n        if (valid) {\n          try {\n            const appointmentData = {\n              doctorId: this.$route.params.doctorId,\n              appointmentDate: this.appointmentForm.appointmentDate,\n              timeSlot: this.appointmentForm.timeSlot,\n              visitType: this.appointmentForm.visitType,\n              description: this.appointmentForm.description,\n              fee: this.registrationFee\n            };\n            const {\n              data\n            } = await this.$http.post('/appointments', appointmentData);\n            if (data.code === 200) {\n              this.$alert('预约成功！请按时就医。', '预约结果', {\n                confirmButtonText: '确定',\n                callback: () => {\n                  this.$router.push('/home/records');\n                }\n              });\n            } else {\n              this.$message.error(data.message);\n            }\n          } catch (error) {\n            this.$message.error('预约失败，请稍后重试');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","doctorInfo","departmentInfo","appointmentForm","appointmentDate","timeSlot","visitType","description","rules","required","message","trigger","timeSlots","value","label","dateOptions","disabledDate","time","getTime","Date","now","registrationFee","created","getDoctorInfo","methods","$http","get","$route","params","doctorId","code","getDepartmentInfo","dep_id","$message","error","depId","submitAppointment","$refs","validate","valid","appointmentData","fee","post","$alert","confirmButtonText","callback","$router","push"],"sources":["src/views/Appointment.vue"],"sourcesContent":["<template>\r\n  <div class=\"appointment-container\">\r\n    <div class=\"page-header\">\r\n      <el-page-header @back=\"$router.go(-1)\" content=\"预约挂号\"></el-page-header>\r\n    </div>\r\n    \r\n    <el-card class=\"appointment-card\">\r\n      <div class=\"doctor-info\">\r\n        <div class=\"doctor-avatar\">\r\n          <i v-if=\"!doctorInfo.headimg\" class=\"el-icon-user-solid\"></i>\r\n          <img v-else :src=\"doctorInfo.headimg\" alt=\"医生头像\">\r\n        </div>\r\n        <div class=\"info-content\">\r\n          <h3>{{ doctorInfo.username }}</h3>\r\n          <p>{{ doctorInfo.title }}</p>\r\n          <p>{{ departmentInfo.departmentname }}科室</p>\r\n        </div>\r\n      </div>\r\n\r\n      <el-form :model=\"appointmentForm\" :rules=\"rules\" ref=\"appointmentForm\" label-width=\"100px\" class=\"appointment-form\">\r\n        <el-form-item label=\"就诊日期\" prop=\"appointmentDate\">\r\n          <el-date-picker\r\n            v-model=\"appointmentForm.appointmentDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择就诊日期\"\r\n            :picker-options=\"dateOptions\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"就诊时段\" prop=\"timeSlot\">\r\n          <el-select v-model=\"appointmentForm.timeSlot\" placeholder=\"请选择就诊时段\">\r\n            <el-option\r\n              v-for=\"slot in timeSlots\"\r\n              :key=\"slot.value\"\r\n              :label=\"slot.label\"\r\n              :value=\"slot.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"就诊类型\" prop=\"visitType\">\r\n          <el-radio-group v-model=\"appointmentForm.visitType\">\r\n            <el-radio :label=\"1\">初诊</el-radio>\r\n            <el-radio :label=\"2\">复诊</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"病情描述\" prop=\"description\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"appointmentForm.description\"\r\n            :rows=\"4\"\r\n            placeholder=\"请简要描述您的病情\">\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <div class=\"fee-info\">\r\n          <span class=\"fee-label\">挂号费用：</span>\r\n          <span class=\"fee-amount\">￥{{ registrationFee }}</span>\r\n        </div>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitAppointment\" class=\"submit-btn\">确认预约并支付</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Appointment',\r\n  data() {\r\n    return {\r\n      doctorInfo: {},\r\n      departmentInfo: {},\r\n      appointmentForm: {\r\n        appointmentDate: '',\r\n        timeSlot: '',\r\n        visitType: 1,\r\n        description: ''\r\n      },\r\n      rules: {\r\n        appointmentDate: [\r\n          { required: true, message: '请选择就诊日期', trigger: 'change' }\r\n        ],\r\n        timeSlot: [\r\n          { required: true, message: '请选择就诊时段', trigger: 'change' }\r\n        ],\r\n        visitType: [\r\n          { required: true, message: '请选择就诊类型', trigger: 'change' }\r\n        ],\r\n        description: [\r\n          { required: true, message: '请填写病情描述', trigger: 'blur' }\r\n        ]\r\n      },\r\n      timeSlots: [\r\n        { value: '1', label: '上午 8:00-10:00' },\r\n        { value: '2', label: '上午 10:00-12:00' },\r\n        { value: '3', label: '下午 14:00-16:00' },\r\n        { value: '4', label: '下午 16:00-18:00' }\r\n      ],\r\n      dateOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() < Date.now() - 8.64e7\r\n        }\r\n      },\r\n      registrationFee: 50\r\n    }\r\n  },\r\n  created() {\r\n    this.getDoctorInfo()\r\n  },\r\n  methods: {\r\n    async getDoctorInfo() {\r\n      try {\r\n        const { data } = await this.$http.get(`/doctors/${this.$route.params.doctorId}`)\r\n        if (data.code === 200) {\r\n          this.doctorInfo = data.data\r\n          this.getDepartmentInfo(this.doctorInfo.dep_id)\r\n        } else {\r\n          this.$message.error(data.message)\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取医生信息失败')\r\n      }\r\n    },\r\n    async getDepartmentInfo(depId) {\r\n      try {\r\n        const { data } = await this.$http.get(`/departments/${depId}`)\r\n        if (data.code === 200) {\r\n          this.departmentInfo = data.data\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取科室信息失败')\r\n      }\r\n    },\r\n    submitAppointment() {\r\n      this.$refs.appointmentForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            const appointmentData = {\r\n              doctorId: this.$route.params.doctorId,\r\n              appointmentDate: this.appointmentForm.appointmentDate,\r\n              timeSlot: this.appointmentForm.timeSlot,\r\n              visitType: this.appointmentForm.visitType,\r\n              description: this.appointmentForm.description,\r\n              fee: this.registrationFee\r\n            }\r\n            \r\n            const { data } = await this.$http.post('/appointments', appointmentData)\r\n            if (data.code === 200) {\r\n              this.$alert('预约成功！请按时就医。', '预约结果', {\r\n                confirmButtonText: '确定',\r\n                callback: () => {\r\n                  this.$router.push('/home/records')\r\n                }\r\n              })\r\n            } else {\r\n              this.$message.error(data.message)\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('预约失败，请稍后重试')\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.appointment-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.appointment-card {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.doctor-info {\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #eee;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.doctor-avatar {\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-right: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.doctor-avatar img {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.doctor-avatar i {\r\n  font-size: 100px;\r\n  color: #dcdfe6;\r\n}\r\n\r\n.info-content h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.info-content p {\r\n  margin: 5px 0;\r\n  color: #606266;\r\n}\r\n\r\n.appointment-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.fee-info {\r\n  margin: 20px 0;\r\n  padding: 15px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.fee-label {\r\n  font-size: 16px;\r\n  color: #606266;\r\n}\r\n\r\n.fee-amount {\r\n  font-size: 20px;\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAsEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,cAAA;MACAC,eAAA;QACAC,eAAA;QACAC,QAAA;QACAC,SAAA;QACAC,WAAA;MACA;MACAC,KAAA;QACAJ,eAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,SAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,WAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,SAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,WAAA;QACAC,aAAAC,IAAA;UACA,OAAAA,IAAA,CAAAC,OAAA,KAAAC,IAAA,CAAAC,GAAA;QACA;MACA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAD,cAAA;MACA;QACA;UAAAvB;QAAA,eAAAyB,KAAA,CAAAC,GAAA,kBAAAC,MAAA,CAAAC,MAAA,CAAAC,QAAA;QACA,IAAA7B,IAAA,CAAA8B,IAAA;UACA,KAAA7B,UAAA,GAAAD,IAAA,CAAAA,IAAA;UACA,KAAA+B,iBAAA,MAAA9B,UAAA,CAAA+B,MAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAlC,IAAA,CAAAU,OAAA;QACA;MACA,SAAAwB,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACA,MAAAH,kBAAAI,KAAA;MACA;QACA;UAAAnC;QAAA,eAAAyB,KAAA,CAAAC,GAAA,iBAAAS,KAAA;QACA,IAAAnC,IAAA,CAAA8B,IAAA;UACA,KAAA5B,cAAA,GAAAF,IAAA,CAAAA,IAAA;QACA;MACA,SAAAkC,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAE,kBAAA;MACA,KAAAC,KAAA,CAAAlC,eAAA,CAAAmC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAAC,eAAA;cACAX,QAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,QAAA;cACAzB,eAAA,OAAAD,eAAA,CAAAC,eAAA;cACAC,QAAA,OAAAF,eAAA,CAAAE,QAAA;cACAC,SAAA,OAAAH,eAAA,CAAAG,SAAA;cACAC,WAAA,OAAAJ,eAAA,CAAAI,WAAA;cACAkC,GAAA,OAAApB;YACA;YAEA;cAAArB;YAAA,eAAAyB,KAAA,CAAAiB,IAAA,kBAAAF,eAAA;YACA,IAAAxC,IAAA,CAAA8B,IAAA;cACA,KAAAa,MAAA;gBACAC,iBAAA;gBACAC,QAAA,EAAAA,CAAA;kBACA,KAAAC,OAAA,CAAAC,IAAA;gBACA;cACA;YACA;cACA,KAAAd,QAAA,CAAAC,KAAA,CAAAlC,IAAA,CAAAU,OAAA;YACA;UACA,SAAAwB,KAAA;YACA,KAAAD,QAAA,CAAAC,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}