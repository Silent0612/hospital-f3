{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Departments',\n  data: function data() {\n    return {\n      departments: []\n    };\n  },\n  created: function created() {\n    this.getDepartments();\n  },\n  methods: {\n    getDepartments: function getDepartments() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.$http.get('/api/department/list');\n            case 3:\n              res = _context.sent;\n              if (res.data.code === 200) {\n                _this.departments = res.data.data;\n              }\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              _this.$message.error('获取科室列表失败');\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    selectDepartment: function selectDepartment(dept) {\n      this.$router.push({\n        path: '/doctors',\n        query: {\n          departmentId: dept.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","departments","created","getDepartments","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","$http","get","sent","code","t0","$message","error","stop","selectDepartment","dept","$router","push","path","query","departmentId","id"],"sources":["src/views/Departments.vue"],"sourcesContent":["<template>\r\n  <div class=\"departments-page page-container\">\r\n    <h1 class=\"page-title\">科室选择</h1>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"8\" v-for=\"dept in departments\" :key=\"dept.id\">\r\n        <el-card class=\"department-card\" shadow=\"hover\" @click.native=\"selectDepartment(dept)\">\r\n          <div class=\"department-icon\">\r\n            <i class=\"el-icon-first-aid-kit\"></i>\r\n          </div>\r\n          <div class=\"department-info\">\r\n            <h3>{{ dept.name }}</h3>\r\n            <p>{{ dept.description || '暂无描述' }}</p>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Departments',\r\n  data() {\r\n    return {\r\n      departments: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getDepartments()\r\n  },\r\n  methods: {\r\n    async getDepartments() {\r\n      try {\r\n        const res = await this.$http.get('/api/department/list')\r\n        if (res.data.code === 200) {\r\n          this.departments = res.data.data\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取科室列表失败')\r\n      }\r\n    },\r\n    selectDepartment(dept) {\r\n      this.$router.push({\r\n        path: '/doctors',\r\n        query: { departmentId: dept.id }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.departments-page {\r\n  .department-card {\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    border: none;\r\n    background: rgba(255, 255, 255, 0.9);\r\n    \r\n    &:hover {\r\n      transform: translateY(-5px);\r\n      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n      \r\n      .department-icon {\r\n        i {\r\n          transform: scale(1.1);\r\n          color: #409EFF;\r\n        }\r\n      }\r\n    }\r\n    \r\n    .department-icon {\r\n      text-align: center;\r\n      margin-bottom: 15px;\r\n      \r\n      i {\r\n        font-size: 48px;\r\n        color: #666;\r\n        transition: all 0.3s ease;\r\n      }\r\n    }\r\n    \r\n    .department-info {\r\n      text-align: center;\r\n      \r\n      h3 {\r\n        margin: 0 0 10px;\r\n        font-size: 18px;\r\n        color: #333;\r\n      }\r\n      \r\n      p {\r\n        margin: 0;\r\n        font-size: 14px;\r\n        color: #666;\r\n        line-height: 1.5;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;AAoBA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAD,cAAA,WAAAA,eAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAV,KAAA,CAAAW,KAAA,CAAAC,GAAA;YAAA;cAAAP,GAAA,GAAAG,QAAA,CAAAK,IAAA;cACA,IAAAR,GAAA,CAAAV,IAAA,CAAAmB,IAAA;gBACAd,KAAA,CAAAJ,WAAA,GAAAS,GAAA,CAAAV,IAAA,CAAAA,IAAA;cACA;cAAAa,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEAR,KAAA,CAAAgB,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEA;IACAe,gBAAA,WAAAA,iBAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UAAAC,YAAA,EAAAL,IAAA,CAAAM;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}