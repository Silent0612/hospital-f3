{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data: function data() {\n    return {\n      form: {\n        phone: '',\n        password: ''\n      },\n      rules: {\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能小于6位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleLogin: function handleLogin() {\n      var _this = this;\n      this.$refs.loginForm.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(valid) {\n          var headers, formData, response, data, userInfo, _error$response$data;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!valid) {\n                  _context.next = 19;\n                  break;\n                }\n                _context.prev = 1;\n                console.log('发送登录请求:', _this.form);\n\n                // 设置请求头\n                headers = {\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                }; // 创建表单数据\n                formData = new URLSearchParams();\n                formData.append('phone', _this.form.phone);\n                formData.append('password', _this.form.password);\n                _context.next = 9;\n                return _this.$http.post('/api/shiro/login', formData, {\n                  headers: headers\n                });\n              case 9:\n                response = _context.sent;\n                console.log('登录响应:', response);\n                data = response.data;\n                if (data.code === 200 || data.suc === true) {\n                  userInfo = data.data || data.result; // 检查用户角色\n                  if (userInfo.roleid === 1) {\n                    // 医生角色\n                    // 保存用户信息到localStorage\n                    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n                    // 保存登录状态\n                    localStorage.setItem('isLogin', 'true');\n                    // 保存token（使用用户ID作为简单的token）\n                    localStorage.setItem('token', userInfo.id);\n                    _this.$message.success('登录成功');\n                    // 医生跳转到医生工作台\n                    _this.$router.push('/doctor/patient');\n                  } else if (userInfo.roleid === 2) {\n                    // 病人角色\n                    // 保存用户信息到localStorage\n                    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n                    // 保存登录状态\n                    localStorage.setItem('isLogin', 'true');\n                    // 保存token（使用用户ID作为简单的token）\n                    localStorage.setItem('token', userInfo.id);\n                    _this.$message.success('登录成功');\n                    // 病人跳转到科室列表页面\n                    _this.$router.push('/home/departments');\n                  } else {\n                    _this.$message.error('无效的用户角色');\n                  }\n                } else {\n                  _this.$message.error(data.msg || '登录失败');\n                }\n                _context.next = 19;\n                break;\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                console.error('登录错误:', _context.t0);\n                if (_context.t0.response) {\n                  _this.$message.error(((_error$response$data = _context.t0.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || '登录失败，请检查用户名和密码');\n                } else {\n                  _this.$message.error('登录失败，请稍后重试');\n                }\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[1, 15]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"names":["data","form","phone","password","rules","required","message","trigger","pattern","min","methods","handleLogin","_this","$refs","loginForm","validate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","valid","headers","formData","response","userInfo","_error$response$data","wrap","_callee$","_context","prev","next","console","log","URLSearchParams","append","$http","post","sent","code","suc","result","roleid","localStorage","setItem","JSON","stringify","id","$message","success","$router","push","error","msg","t0","stop","_x","apply","arguments"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">医院预约挂号系统</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"loginForm\" label-width=\"0\">\r\n        <el-form-item prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" prefix-icon=\"el-icon-user\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"form.password\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" class=\"login-button\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"register-link\">\r\n        还没有账号？<router-link to=\"/register\">立即注册</router-link>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        phone: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        phone: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            console.log('发送登录请求:', this.form)\r\n            \r\n            // 设置请求头\r\n            const headers = {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n            \r\n            // 创建表单数据\r\n            const formData = new URLSearchParams()\r\n            formData.append('phone', this.form.phone)\r\n            formData.append('password', this.form.password)\r\n            \r\n            const response = await this.$http.post('/api/shiro/login', formData, { headers })\r\n            console.log('登录响应:', response)\r\n            \r\n            const data = response.data\r\n            if (data.code === 200 || data.suc === true) {\r\n              const userInfo = data.data || data.result\r\n              // 检查用户角色\r\n              if (userInfo.roleid === 1) { // 医生角色\r\n                // 保存用户信息到localStorage\r\n                localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n                // 保存登录状态\r\n                localStorage.setItem('isLogin', 'true')\r\n                // 保存token（使用用户ID作为简单的token）\r\n                localStorage.setItem('token', userInfo.id)\r\n                \r\n                this.$message.success('登录成功')\r\n                // 医生跳转到医生工作台\r\n                this.$router.push('/doctor/patient')\r\n              } else if (userInfo.roleid === 2) { // 病人角色\r\n                // 保存用户信息到localStorage\r\n                localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n                // 保存登录状态\r\n                localStorage.setItem('isLogin', 'true')\r\n                // 保存token（使用用户ID作为简单的token）\r\n                localStorage.setItem('token', userInfo.id)\r\n                \r\n                this.$message.success('登录成功')\r\n                // 病人跳转到科室列表页面\r\n                this.$router.push('/home/departments')\r\n              } else {\r\n                this.$message.error('无效的用户角色')\r\n              }\r\n            } else {\r\n              this.$message.error(data.msg || '登录失败')\r\n            }\r\n          } catch (error) {\r\n            console.error('登录错误:', error)\r\n            if (error.response) {\r\n              this.$message.error(error.response.data?.msg || '登录失败，请检查用户名和密码')\r\n            } else {\r\n              this.$message.error('登录失败，请稍后重试')\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n.register-link {\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.register-link a {\r\n  color: #409EFF;\r\n  text-decoration: none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}