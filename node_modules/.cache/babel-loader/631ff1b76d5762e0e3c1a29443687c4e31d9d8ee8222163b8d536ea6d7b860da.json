{"ast":null,"code":"export default {\n  name: 'Register',\n  data() {\n    const validatePass2 = (rule, value, callback) => {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        name: '',\n        phone: '',\n        password: '',\n        confirmPassword: '',\n        gender: 1,\n        birthday: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能小于6位',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        birthday: [{\n          required: true,\n          message: '请选择出生日期',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleRegister() {\n      this.$refs.registerForm.validate(async valid => {\n        if (valid) {\n          try {\n            const {\n              data\n            } = await this.$http.post('/patient/register', {\n              name: this.registerForm.name,\n              phone: this.registerForm.phone,\n              password: this.registerForm.password,\n              gender: this.registerForm.gender,\n              birthday: this.registerForm.birthday\n            });\n            if (data.code === 200) {\n              this.$message.success('注册成功');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(data.message);\n            }\n          } catch (error) {\n            this.$message.error('注册失败，请稍后重试');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass2","rule","value","callback","registerForm","password","Error","phone","confirmPassword","gender","birthday","rules","required","message","trigger","min","max","pattern","validator","methods","handleRegister","$refs","validate","valid","$http","post","code","$message","success","$router","push","error"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <el-card class=\"register-card\">\r\n      <div class=\"title\">用户注册</div>\r\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"80px\">\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"registerForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"registerForm.phone\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"registerForm.confirmPassword\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"gender\">\r\n          <el-radio-group v-model=\"registerForm.gender\">\r\n            <el-radio :label=\"1\">男</el-radio>\r\n            <el-radio :label=\"0\">女</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"出生日期\" prop=\"birthday\">\r\n          <el-date-picker v-model=\"registerForm.birthday\" type=\"date\" placeholder=\"选择日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleRegister\" class=\"register-button\">注册</el-button>\r\n          <el-button @click=\"$router.push('/login')\" class=\"login-button\">返回登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Register',\r\n  data() {\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value !== this.registerForm.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      registerForm: {\r\n        name: '',\r\n        phone: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        gender: 1,\r\n        birthday: ''\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' },\r\n          { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ],\r\n        gender: [\r\n          { required: true, message: '请选择性别', trigger: 'change' }\r\n        ],\r\n        birthday: [\r\n          { required: true, message: '请选择出生日期', trigger: 'change' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleRegister() {\r\n      this.$refs.registerForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            const { data } = await this.$http.post('/patient/register', {\r\n              name: this.registerForm.name,\r\n              phone: this.registerForm.phone,\r\n              password: this.registerForm.password,\r\n              gender: this.registerForm.gender,\r\n              birthday: this.registerForm.birthday\r\n            })\r\n            if (data.code === 200) {\r\n              this.$message.success('注册成功')\r\n              this.$router.push('/login')\r\n            } else {\r\n              this.$message.error(data.message)\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('注册失败，请稍后重试')\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #f0f2f5;\r\n}\r\n\r\n.register-card {\r\n  width: 500px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n\r\n.register-button {\r\n  width: 45%;\r\n}\r\n\r\n.login-button {\r\n  width: 45%;\r\n  margin-left: 10%;\r\n}\r\n</style>\r\n"],"mappings":"AAoCA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,UAAAE,YAAA,CAAAC,QAAA;QACAF,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACAC,YAAA;QACAN,IAAA;QACAS,KAAA;QACAF,QAAA;QACAG,eAAA;QACAC,MAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,OAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,eAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,SAAA,EAAAlB,aAAA;UAAAc,OAAA;QAAA,EACA;QACAL,MAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,OAAA;IACAC,eAAA;MACA,KAAAC,KAAA,CAAAjB,YAAA,CAAAkB,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA;cAAAxB;YAAA,eAAAyB,KAAA,CAAAC,IAAA;cACA3B,IAAA,OAAAM,YAAA,CAAAN,IAAA;cACAS,KAAA,OAAAH,YAAA,CAAAG,KAAA;cACAF,QAAA,OAAAD,YAAA,CAAAC,QAAA;cACAI,MAAA,OAAAL,YAAA,CAAAK,MAAA;cACAC,QAAA,OAAAN,YAAA,CAAAM;YACA;YACA,IAAAX,IAAA,CAAA2B,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,QAAA,CAAAI,KAAA,CAAAhC,IAAA,CAAAc,OAAA;YACA;UACA,SAAAkB,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}