{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nexport default {\n  name: 'Records',\n  data: function data() {\n    return {\n      records: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      timeSlots: {\n        '1': '上午 8:00-10:00',\n        '2': '上午 10:00-12:00',\n        '3': '下午 14:00-16:00',\n        '4': '下午 16:00-18:00'\n      }\n    };\n  },\n  created: function created() {\n    this.getRecords();\n  },\n  methods: {\n    getRecords: function getRecords() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userInfo, _yield$_this$$http$ge, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              _context.prev = 1;\n              userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n              _context.next = 5;\n              return _this.$http.get(\"/api/appointments/user/\".concat(userInfo.id));\n            case 5:\n              _yield$_this$$http$ge = _context.sent;\n              data = _yield$_this$$http$ge.data;\n              if (data.code === 200) {\n                _this.records = data.data || [];\n                _this.total = _this.records.length;\n              } else {\n                _this.$message.error(data.message || '获取预约记录失败');\n              }\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取预约记录错误:', _context.t0);\n              _this.$message.error('获取预约记录失败，请稍后重试');\n            case 14:\n              _context.prev = 14;\n              _this.loading = false;\n              return _context.finish(14);\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 10, 14, 17]]);\n      }))();\n    },\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    getTimeSlotLabel: function getTimeSlotLabel(timeSlot) {\n      return this.timeSlots[timeSlot] || '未知时段';\n    },\n    getStatusType: function getStatusType(status) {\n      var types = {\n        0: 'info',\n        // 待就诊\n        1: 'success',\n        // 已完成\n        2: 'danger' // 已取消\n      };\n      return types[status] || 'info';\n    },\n    getStatusLabel: function getStatusLabel(status) {\n      var labels = {\n        0: '待就诊',\n        1: '已完成',\n        2: '已取消'\n      };\n      return labels[status] || '未知状态';\n    },\n    canCancel: function canCancel(record) {\n      return record.status === 0 && new Date(record.appointmentDate) > new Date();\n    },\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.currentPage = page;\n      this.getRecords();\n    },\n    handleCancel: function handleCancel(record) {\n      var _this2 = this;\n      this.$confirm('确认取消该预约吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$_this2$$http$p, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _this2.$http.put(\"/api/consultation/cancel/\".concat(record.id));\n            case 3:\n              _yield$_this2$$http$p = _context2.sent;\n              data = _yield$_this2$$http$p.data;\n              if (data.code === '200' || data.suc === true) {\n                _this2.$message.success('取消预约成功');\n                _this2.getRecords();\n              } else {\n                _this2.$message.error(data.msg || '取消预约失败');\n              }\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('取消预约错误:', _context2.t0);\n              _this2.$message.error('取消预约失败，请稍后重试');\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      })))[\"catch\"](function () {});\n    }\n  }\n};","map":{"version":3,"names":["name","data","records","loading","currentPage","pageSize","total","timeSlots","created","getRecords","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userInfo","_yield$_this$$http$ge","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","$http","get","concat","id","sent","code","length","$message","error","message","t0","console","finish","stop","formatDate","date","Date","toLocaleDateString","getTimeSlotLabel","timeSlot","getStatusType","status","types","getStatusLabel","labels","canCancel","record","appointmentDate","handleCurrentChange","page","handleCancel","_this2","$confirm","confirmButtonText","cancelButtonText","type","then","_callee2","_yield$_this2$$http$p","_callee2$","_context2","put","suc","success","msg"],"sources":["src/views/Records.vue"],"sourcesContent":["<template>\r\n  <div class=\"records-container\">\r\n    <el-card>\r\n      <div slot=\"header\">\r\n        <span>我的预约记录</span>\r\n      </div>\r\n      \r\n      <el-table\r\n        :data=\"records\"\r\n        style=\"width: 100%\"\r\n        v-loading=\"loading\">\r\n        <el-table-column\r\n          prop=\"appointmentDate\"\r\n          label=\"就诊日期\"\r\n          width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDate(scope.row.appointmentDate) }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"timeSlot\"\r\n          label=\"就诊时段\"\r\n          width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            {{ getTimeSlotLabel(scope.row.timeSlot) }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"doctorName\"\r\n          label=\"就诊医生\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"departmentName\"\r\n          label=\"就诊科室\"\r\n          width=\"120\">\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"visitType\"\r\n          label=\"就诊类型\"\r\n          width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.visitType === 1 ? '初诊' : '复诊' }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"status\"\r\n          label=\"状态\"\r\n          width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusLabel(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          prop=\"fee\"\r\n          label=\"费用\"\r\n          width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            ￥{{ scope.row.fee }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column\r\n          label=\"操作\"\r\n          width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleCancel(scope.row)\"\r\n              :disabled=\"!canCancel(scope.row)\">取消预约</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, prev, pager, next\"\r\n          :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Records',\r\n  data() {\r\n    return {\r\n      records: [],\r\n      loading: false,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      timeSlots: {\r\n        '1': '上午 8:00-10:00',\r\n        '2': '上午 10:00-12:00',\r\n        '3': '下午 14:00-16:00',\r\n        '4': '下午 16:00-18:00'\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getRecords()\r\n  },\r\n  methods: {\r\n    async getRecords() {\r\n      this.loading = true\r\n      try {\r\n        const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\r\n        const { data } = await this.$http.get(`/api/appointments/user/${userInfo.id}`)\r\n        if (data.code === 200) {\r\n          this.records = data.data || []\r\n          this.total = this.records.length\r\n        } else {\r\n          this.$message.error(data.message || '获取预约记录失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取预约记录错误:', error)\r\n        this.$message.error('获取预约记录失败，请稍后重试')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString()\r\n    },\r\n    getTimeSlotLabel(timeSlot) {\r\n      return this.timeSlots[timeSlot] || '未知时段'\r\n    },\r\n    getStatusType(status) {\r\n      const types = {\r\n        0: 'info',    // 待就诊\r\n        1: 'success', // 已完成\r\n        2: 'danger'   // 已取消\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n    getStatusLabel(status) {\r\n      const labels = {\r\n        0: '待就诊',\r\n        1: '已完成',\r\n        2: '已取消'\r\n      }\r\n      return labels[status] || '未知状态'\r\n    },\r\n    canCancel(record) {\r\n      return record.status === 0 && new Date(record.appointmentDate) > new Date()\r\n    },\r\n    handleCurrentChange(page) {\r\n      this.currentPage = page\r\n      this.getRecords()\r\n    },\r\n    handleCancel(record) {\r\n      this.$confirm('确认取消该预约吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          const { data } = await this.$http.put(`/api/consultation/cancel/${record.id}`)\r\n          if (data.code === '200' || data.suc === true) {\r\n            this.$message.success('取消预约成功')\r\n            this.getRecords()\r\n          } else {\r\n            this.$message.error(data.msg || '取消预约失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('取消预约错误:', error)\r\n          this.$message.error('取消预约失败，请稍后重试')\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.records-container {\r\n  padding: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}