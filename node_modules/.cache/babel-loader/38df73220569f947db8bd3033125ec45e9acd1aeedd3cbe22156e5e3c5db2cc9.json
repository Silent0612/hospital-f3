{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Departments',\n  data: function data() {\n    return {\n      departments: []\n    };\n  },\n  created: function created() {\n    this.getDepartments();\n  },\n  methods: {\n    getDepartments: function getDepartments() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_this$$http$ge, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.$http.get('/api/departmentinfo/list');\n            case 3:\n              _yield$_this$$http$ge = _context.sent;\n              response = _yield$_this$$http$ge.data;\n              console.log('科室列表响应:', response);\n              if (response.code === 200) {\n                _this.departments = response.data;\n              } else {\n                _this.$message.error(response.message || '获取科室列表失败');\n              }\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取科室列表错误:', _context.t0);\n              _this.$message.error('获取科室列表失败，请稍后重试');\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    handleDeptClick: function handleDeptClick(dept) {\n      this.$router.push(\"/home/doctors/\".concat(dept.id));\n    },\n    getDeptIconClass: function getDeptIconClass(deptName) {\n      var iconMap = {\n        '内科': 'el-icon-first-aid-kit',\n        '外科': 'el-icon-scissors',\n        '儿科': 'el-icon-sugar',\n        '妇科': 'el-icon-female',\n        '眼科': 'el-icon-view',\n        '耳鼻喉科': 'el-icon-headset',\n        '口腔科': 'el-icon-tooth',\n        '皮肤科': 'el-icon-magic-stick',\n        '神经科': 'el-icon-lightning',\n        '精神科': 'el-icon-moon',\n        '中医科': 'el-icon-bangzhu',\n        '康复科': 'el-icon-refresh-right'\n      };\n      return iconMap[deptName] || 'el-icon-first-aid-kit';\n    },\n    getDeptIcon: function getDeptIcon(deptName) {\n      var colorMap = {\n        '内科': 'icon-blue',\n        '外科': 'icon-green',\n        '儿科': 'icon-orange',\n        '妇科': 'icon-pink',\n        '眼科': 'icon-purple',\n        '耳鼻喉科': 'icon-cyan',\n        '口腔科': 'icon-red',\n        '皮肤科': 'icon-yellow',\n        '神经科': 'icon-indigo',\n        '精神科': 'icon-teal',\n        '中医科': 'icon-brown',\n        '康复科': 'icon-lime'\n      };\n      return colorMap[deptName] || 'icon-blue';\n    }\n  }\n};","map":{"version":3,"names":["name","data","departments","created","getDepartments","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$_this$$http$ge","response","wrap","_callee$","_context","prev","next","$http","get","sent","console","log","code","$message","error","message","t0","stop","handleDeptClick","dept","$router","push","concat","id","getDeptIconClass","deptName","iconMap","getDeptIcon","colorMap"],"sources":["src/views/Departments.vue"],"sourcesContent":["<template>\r\n  <div class=\"departments-container\">\r\n    <h2 class=\"page-title\">选择就诊科室</h2>\r\n    <el-row :gutter=\"30\">\r\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" v-for=\"dept in departments\" :key=\"dept.id\">\r\n        <el-card class=\"dept-card\" shadow=\"hover\" @click.native=\"handleDeptClick(dept)\">\r\n          <div class=\"dept-content\">\r\n            <div class=\"dept-icon\" :class=\"getDeptIcon(dept.departmentname)\">\r\n              <i :class=\"getDeptIconClass(dept.departmentname)\"></i>\r\n            </div>\r\n            <div class=\"dept-info\">\r\n              <div class=\"dept-name\">{{ dept.departmentname }}</div>\r\n              <div class=\"dept-desc\">{{ dept.description || '暂无描述' }}</div>\r\n              <div class=\"dept-action\">\r\n                <span>点击查看医生</span>\r\n                <i class=\"el-icon-arrow-right\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Departments',\r\n  data() {\r\n    return {\r\n      departments: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getDepartments()\r\n  },\r\n  methods: {\r\n    async getDepartments() {\r\n      try {\r\n        const { data: response } = await this.$http.get('/api/departmentinfo/list');\r\n        console.log('科室列表响应:', response);\r\n        if (response.code === 200) {\r\n          this.departments = response.data;\r\n        } else {\r\n          this.$message.error(response.message || '获取科室列表失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取科室列表错误:', error);\r\n        this.$message.error('获取科室列表失败，请稍后重试');\r\n      }\r\n    },\r\n    handleDeptClick(dept) {\r\n      this.$router.push(`/home/doctors/${dept.id}`)\r\n    },\r\n    getDeptIconClass(deptName) {\r\n      const iconMap = {\r\n        '内科': 'el-icon-first-aid-kit',\r\n        '外科': 'el-icon-scissors',\r\n        '儿科': 'el-icon-sugar',\r\n        '妇科': 'el-icon-female',\r\n        '眼科': 'el-icon-view',\r\n        '耳鼻喉科': 'el-icon-headset',\r\n        '口腔科': 'el-icon-tooth',\r\n        '皮肤科': 'el-icon-magic-stick',\r\n        '神经科': 'el-icon-lightning',\r\n        '精神科': 'el-icon-moon',\r\n        '中医科': 'el-icon-bangzhu',\r\n        '康复科': 'el-icon-refresh-right'\r\n      };\r\n      return iconMap[deptName] || 'el-icon-first-aid-kit';\r\n    },\r\n    getDeptIcon(deptName) {\r\n      const colorMap = {\r\n        '内科': 'icon-blue',\r\n        '外科': 'icon-green',\r\n        '儿科': 'icon-orange',\r\n        '妇科': 'icon-pink',\r\n        '眼科': 'icon-purple',\r\n        '耳鼻喉科': 'icon-cyan',\r\n        '口腔科': 'icon-red',\r\n        '皮肤科': 'icon-yellow',\r\n        '神经科': 'icon-indigo',\r\n        '精神科': 'icon-teal',\r\n        '中医科': 'icon-brown',\r\n        '康复科': 'icon-lime'\r\n      };\r\n      return colorMap[deptName] || 'icon-blue';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.departments-container {\r\n  padding: 30px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #303133;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n.page-title::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #409EFF, #36a3f7);\r\n  border-radius: 3px;\r\n}\r\n\r\n.dept-card {\r\n  margin-bottom: 30px;\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.dept-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dept-content {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.dept-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  font-size: 30px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.dept-icon i {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.dept-card:hover .dept-icon i {\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 图标颜色样式 */\r\n.icon-blue { background: linear-gradient(135deg, #409EFF20, #409EFF40); color: #409EFF; }\r\n.icon-green { background: linear-gradient(135deg, #67C23A20, #67C23A40); color: #67C23A; }\r\n.icon-orange { background: linear-gradient(135deg, #E6A23C20, #E6A23C40); color: #E6A23C; }\r\n.icon-pink { background: linear-gradient(135deg, #F56C6C20, #F56C6C40); color: #F56C6C; }\r\n.icon-purple { background: linear-gradient(135deg, #9C27B020, #9C27B040); color: #9C27B0; }\r\n.icon-cyan { background: linear-gradient(135deg, #00BCD420, #00BCD440); color: #00BCD4; }\r\n.icon-red { background: linear-gradient(135deg, #F4433620, #F4433640); color: #F44336; }\r\n.icon-yellow { background: linear-gradient(135deg, #FFEB3B20, #FFEB3B40); color: #FFB300; }\r\n.icon-indigo { background: linear-gradient(135deg, #3F51B520, #3F51B540); color: #3F51B5; }\r\n.icon-teal { background: linear-gradient(135deg, #00968820, #00968840); color: #009688; }\r\n.icon-brown { background: linear-gradient(135deg, #79554820, #79554840); color: #795548; }\r\n.icon-lime { background: linear-gradient(135deg, #CDDC3920, #CDDC3940); color: #827717; }\r\n\r\n.dept-info {\r\n  flex: 1;\r\n}\r\n\r\n.dept-name {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #303133;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.dept-desc {\r\n  font-size: 14px;\r\n  color: #909399;\r\n  margin-bottom: 12px;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  line-height: 1.5;\r\n}\r\n\r\n.dept-action {\r\n  display: flex;\r\n  align-items: center;\r\n  color: #409EFF;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.dept-action i {\r\n  margin-left: 5px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.dept-card:hover .dept-action i {\r\n  transform: translateX(5px);\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .departments-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .dept-content {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .dept-icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .dept-name {\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;AA0BA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAD,cAAA,WAAAA,eAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,qBAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAX,KAAA,CAAAY,KAAA,CAAAC,GAAA;YAAA;cAAAR,qBAAA,GAAAI,QAAA,CAAAK,IAAA;cAAAR,QAAA,GAAAD,qBAAA,CAAAV,IAAA;cACAoB,OAAA,CAAAC,GAAA,YAAAV,QAAA;cACA,IAAAA,QAAA,CAAAW,IAAA;gBACAjB,KAAA,CAAAJ,WAAA,GAAAU,QAAA,CAAAX,IAAA;cACA;gBACAK,KAAA,CAAAkB,QAAA,CAAAC,KAAA,CAAAb,QAAA,CAAAc,OAAA;cACA;cAAAX,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;cAEAM,OAAA,CAAAI,KAAA,cAAAV,QAAA,CAAAY,EAAA;cACArB,KAAA,CAAAkB,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAa,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAEA;IACAmB,eAAA,WAAAA,gBAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,kBAAAC,MAAA,CAAAH,IAAA,CAAAI,EAAA;IACA;IACAC,gBAAA,WAAAA,iBAAAC,QAAA;MACA,IAAAC,OAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,OAAA,CAAAD,QAAA;IACA;IACAE,WAAA,WAAAA,YAAAF,QAAA;MACA,IAAAG,QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,QAAA,CAAAH,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}