{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nexport default {\n  name: 'Doctors',\n  props: {\n    id: {\n      type: Number,\n      required: true,\n      validator: function validator(value) {\n        return !isNaN(value);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      doctors: [],\n      departmentName: ''\n    };\n  },\n  created: function created() {\n    if (!isNaN(this.id)) {\n      this.getDoctors();\n      this.getDepartmentInfo();\n    } else {\n      this.$message.error('无效的科室ID');\n      this.$router.push('/departments');\n    }\n  },\n  methods: {\n    getDoctors: function getDoctors() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.$http.get('/api/empinfo/findByDid', {\n                params: {\n                  departmentid: _this.id\n                }\n              });\n            case 3:\n              res = _context.sent;\n              if (res.data.code === 200) {\n                _this.doctors = res.data.data;\n              } else {\n                _this.$message.error('获取医生列表失败');\n              }\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              _this.$message.error('获取医生列表失败');\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    getDepartmentInfo: function getDepartmentInfo() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _this2.$http.get('/api/departmentinfo/findById', {\n                params: {\n                  id: _this2.id\n                }\n              });\n            case 3:\n              res = _context2.sent;\n              if (res.data.code === 200) {\n                _this2.departmentName = res.data.data.departmentname;\n              } else {\n                _this2.$message.error('获取科室信息失败');\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.$message.error('获取科室信息失败');\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    handleAppointment: function handleAppointment(doctor) {\n      this.$router.push(\"/appointment/\".concat(doctor.id));\n    }\n  }\n};","map":{"version":3,"names":["name","props","id","type","Number","required","validator","value","isNaN","data","doctors","departmentName","created","getDoctors","getDepartmentInfo","$message","error","$router","push","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","$http","get","params","departmentid","sent","code","t0","stop","_this2","_callee2","_callee2$","_context2","departmentname","handleAppointment","doctor","concat"],"sources":["src/views/Doctors.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctors-page page-container\">\r\n    <div class=\"page-header\">\r\n      <el-page-header @back=\"$router.go(-1)\" :content=\"departmentName + '科室医生'\"></el-page-header>\r\n    </div>\r\n    <el-row :gutter=\"20\" class=\"doctor-list\">\r\n      <el-col :span=\"8\" v-for=\"doctor in doctors\" :key=\"doctor.id\">\r\n        <el-card class=\"doctor-card\" shadow=\"hover\">\r\n          <div class=\"doctor-avatar\">\r\n            <i v-if=\"!doctor.headimg\" class=\"el-icon-user-solid\"></i>\r\n            <img v-else :src=\"doctor.headimg\" alt=\"医生头像\">\r\n          </div>\r\n          <div class=\"doctor-info\">\r\n            <h3 class=\"doctor-name\">{{ doctor.username }}</h3>\r\n            <p class=\"doctor-title\">{{ doctor.title || '主治医师' }}</p>\r\n            <p class=\"doctor-exp\">从医经验：{{ doctor.experience || '5' }}年</p>\r\n            <div class=\"doctor-comment\">{{ doctor.comment || '专业医师，热心为患者服务' }}</div>\r\n            <el-button type=\"primary\" @click=\"handleAppointment(doctor)\" class=\"appointment-btn\">\r\n              预约挂号\r\n              <i class=\"el-icon-right\"></i>\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Doctors',\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true,\r\n      validator: value => !isNaN(value)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      doctors: [],\r\n      departmentName: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (!isNaN(this.id)) {\r\n      this.getDoctors()\r\n      this.getDepartmentInfo()\r\n    } else {\r\n      this.$message.error('无效的科室ID')\r\n      this.$router.push('/departments')\r\n    }\r\n  },\r\n  methods: {\r\n    async getDoctors() {\r\n      try {\r\n        const res = await this.$http.get('/api/empinfo/findByDid', {\r\n          params: {\r\n            departmentid: this.id\r\n          }\r\n        })\r\n        if (res.data.code === 200) {\r\n          this.doctors = res.data.data\r\n        } else {\r\n          this.$message.error('获取医生列表失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取医生列表失败')\r\n      }\r\n    },\r\n    async getDepartmentInfo() {\r\n      try {\r\n        const res = await this.$http.get('/api/departmentinfo/findById', {\r\n          params: {\r\n            id: this.id\r\n          }\r\n        })\r\n        if (res.data.code === 200) {\r\n          this.departmentName = res.data.data.departmentname\r\n        } else {\r\n          this.$message.error('获取科室信息失败')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取科室信息失败')\r\n      }\r\n    },\r\n    handleAppointment(doctor) {\r\n      this.$router.push(`/appointment/${doctor.id}`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.doctors-page {\r\n  .page-header {\r\n    margin-bottom: 30px;\r\n    \r\n    :deep(.el-page-header) {\r\n      .el-page-header__left {\r\n        .el-icon-back {\r\n          font-size: 18px;\r\n          color: #409EFF;\r\n        }\r\n        \r\n        .el-page-header__title {\r\n          font-size: 14px;\r\n          color: #606266;\r\n        }\r\n      }\r\n      \r\n      .el-page-header__content {\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        color: #303133;\r\n      }\r\n    }\r\n  }\r\n\r\n  .doctor-list {\r\n    .doctor-card {\r\n      margin-bottom: 20px;\r\n      height: 400px;\r\n      transition: all 0.3s ease;\r\n      border: none;\r\n      background: rgba(255, 255, 255, 0.9);\r\n      \r\n      &:hover {\r\n        transform: translateY(-5px);\r\n        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n      }\r\n\r\n      .doctor-avatar {\r\n        text-align: center;\r\n        margin-bottom: 20px;\r\n        \r\n        img {\r\n          width: 120px;\r\n          height: 120px;\r\n          border-radius: 50%;\r\n          object-fit: cover;\r\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        }\r\n        \r\n        i {\r\n          font-size: 120px;\r\n          color: #dcdfe6;\r\n          transition: all 0.3s ease;\r\n        }\r\n      }\r\n\r\n      .doctor-info {\r\n        text-align: center;\r\n        padding: 0 20px;\r\n        \r\n        .doctor-name {\r\n          font-size: 20px;\r\n          font-weight: 500;\r\n          color: #303133;\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .doctor-title {\r\n          font-size: 16px;\r\n          color: #409EFF;\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .doctor-exp {\r\n          font-size: 14px;\r\n          color: #606266;\r\n          margin-bottom: 15px;\r\n        }\r\n        \r\n        .doctor-comment {\r\n          color: #909399;\r\n          margin-bottom: 20px;\r\n          height: 60px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          display: -webkit-box;\r\n          -webkit-line-clamp: 3;\r\n          -webkit-box-orient: vertical;\r\n          line-height: 1.5;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .appointment-btn {\r\n          width: 80%;\r\n          height: 40px;\r\n          border-radius: 20px;\r\n          font-size: 16px;\r\n          background: linear-gradient(90deg, #409EFF 0%, #66b1ff 100%);\r\n          border: none;\r\n          transition: all 0.3s ease;\r\n          \r\n          &:hover {\r\n            transform: translateY(-2px);\r\n            box-shadow: 0 4px 12px rgba(64, 158, 255, 0.3);\r\n            background: linear-gradient(90deg, #66b1ff 0%, #409EFF 100%);\r\n          }\r\n          \r\n          i {\r\n            margin-left: 5px;\r\n            font-weight: bold;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;AA6BA;EACAA,IAAA;EACAC,KAAA;IACAC,EAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,SAAA,WAAAA,UAAAC,KAAA;QAAA,QAAAC,KAAA,CAAAD,KAAA;MAAA;IACA;EACA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAJ,KAAA,MAAAN,EAAA;MACA,KAAAW,UAAA;MACA,KAAAC,iBAAA;IACA;MACA,KAAAC,QAAA,CAAAC,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAN,UAAA,WAAAA,WAAA;MAAA,IAAAO,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAV,KAAA,CAAAW,KAAA,CAAAC,GAAA;gBACAC,MAAA;kBACAC,YAAA,EAAAd,KAAA,CAAAlB;gBACA;cACA;YAAA;cAJAuB,GAAA,GAAAG,QAAA,CAAAO,IAAA;cAKA,IAAAV,GAAA,CAAAhB,IAAA,CAAA2B,IAAA;gBACAhB,KAAA,CAAAV,OAAA,GAAAe,GAAA,CAAAhB,IAAA,CAAAA,IAAA;cACA;gBACAW,KAAA,CAAAL,QAAA,CAAAC,KAAA;cACA;cAAAY,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEAR,KAAA,CAAAL,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAAY,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEA;IACAV,iBAAA,WAAAA,kBAAA;MAAA,IAAAyB,MAAA;MAAA,OAAAlB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAf,GAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAe,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;YAAA;cAAAY,SAAA,CAAAb,IAAA;cAAAa,SAAA,CAAAZ,IAAA;cAAA,OAEAS,MAAA,CAAAR,KAAA,CAAAC,GAAA;gBACAC,MAAA;kBACA/B,EAAA,EAAAqC,MAAA,CAAArC;gBACA;cACA;YAAA;cAJAuB,GAAA,GAAAiB,SAAA,CAAAP,IAAA;cAKA,IAAAV,GAAA,CAAAhB,IAAA,CAAA2B,IAAA;gBACAG,MAAA,CAAA5B,cAAA,GAAAc,GAAA,CAAAhB,IAAA,CAAAA,IAAA,CAAAkC,cAAA;cACA;gBACAJ,MAAA,CAAAxB,QAAA,CAAAC,KAAA;cACA;cAAA0B,SAAA,CAAAZ,IAAA;cAAA;YAAA;cAAAY,SAAA,CAAAb,IAAA;cAAAa,SAAA,CAAAL,EAAA,GAAAK,SAAA;cAEAH,MAAA,CAAAxB,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAA0B,SAAA,CAAAJ,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEA;IACAI,iBAAA,WAAAA,kBAAAC,MAAA;MACA,KAAA5B,OAAA,CAAAC,IAAA,iBAAA4B,MAAA,CAAAD,MAAA,CAAA3C,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}