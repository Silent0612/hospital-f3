{"ast":null,"code":"import _regeneratorRuntime from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/hospital-master2/hospital-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nexport default {\n  name: 'Doctors',\n  props: {\n    id: {\n      type: Number,\n      required: true,\n      validator: function validator(value) {\n        return !isNaN(value);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      doctors: [],\n      departmentName: ''\n    };\n  },\n  created: function created() {\n    if (!isNaN(this.id)) {\n      this.getDoctors();\n      this.getDepartmentInfo();\n    } else {\n      this.$message.error('无效的科室ID');\n      this.$router.push('/home/departments');\n    }\n  },\n  methods: {\n    getDoctors: function getDoctors() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var departmentId, _yield$_this$$http$ge, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              departmentId = Number(_this.$route.params.id);\n              if (!isNaN(departmentId)) {\n                _context.next = 5;\n                break;\n              }\n              _this.$message.error('无效的科室ID');\n              return _context.abrupt(\"return\");\n            case 5:\n              console.log('正在获取科室ID为', departmentId, '的医生列表');\n              _context.next = 8;\n              return _this.$http.get('/api/empinfo/findByDid', {\n                params: {\n                  departmentid: departmentId\n                }\n              });\n            case 8:\n              _yield$_this$$http$ge = _context.sent;\n              response = _yield$_this$$http$ge.data;\n              console.log('API响应:', response);\n              if (response.code === 200) {\n                _this.doctors = response.data;\n              } else {\n                _this.$message.error(response.message || '获取医生列表失败');\n              }\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取医生列表错误:', _context.t0);\n              _this.$message.error('获取医生列表失败，请稍后重试');\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 14]]);\n      }))();\n    },\n    getDepartmentInfo: function getDepartmentInfo() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var departmentId, _yield$_this2$$http$g, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              departmentId = Number(_this2.$route.params.id);\n              if (!isNaN(departmentId)) {\n                _context2.next = 5;\n                break;\n              }\n              _this2.$message.error('无效的科室ID');\n              return _context2.abrupt(\"return\");\n            case 5:\n              console.log('正在获取科室信息，ID:', departmentId);\n              _context2.next = 8;\n              return _this2.$http.get('/api/departmentinfo/findById', {\n                params: {\n                  id: departmentId\n                }\n              });\n            case 8:\n              _yield$_this2$$http$g = _context2.sent;\n              response = _yield$_this2$$http$g.data;\n              console.log('科室信息响应:', response);\n              if (response.code === 200) {\n                _this2.departmentName = response.data.departmentname;\n              } else {\n                _this2.$message.error(response.message || '获取科室信息失败');\n              }\n              _context2.next = 18;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取科室信息失败:', _context2.t0);\n              _this2.$message.error('获取科室信息失败');\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 14]]);\n      }))();\n    },\n    handleAppointment: function handleAppointment(doctor) {\n      this.$router.push(\"/home/appointment/\".concat(doctor.id));\n    }\n  }\n};","map":{"version":3,"names":["name","props","id","type","Number","required","validator","value","isNaN","data","doctors","departmentName","created","getDoctors","getDepartmentInfo","$message","error","$router","push","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","departmentId","_yield$_this$$http$ge","response","wrap","_callee$","_context","prev","next","$route","params","abrupt","console","log","$http","get","departmentid","sent","code","message","t0","stop","_this2","_callee2","_yield$_this2$$http$g","_callee2$","_context2","departmentname","handleAppointment","doctor","concat"],"sources":["src/views/Doctors.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctors-container\">\r\n    <div class=\"page-header\">\r\n      <el-page-header @back=\"$router.go(-1)\" :content=\"departmentName + '科室医生'\"></el-page-header>\r\n    </div>\r\n    <el-row :gutter=\"20\" class=\"doctor-list\">\r\n      <el-col :span=\"8\" v-for=\"doctor in doctors\" :key=\"doctor.id\">\r\n        <el-card class=\"doctor-card\">\r\n          <div class=\"doctor-avatar\">\r\n            <i v-if=\"!doctor.headimg\" class=\"el-icon-user-solid\"></i>\r\n            <img v-else :src=\"doctor.headimg\" alt=\"医生头像\">\r\n          </div>\r\n          <div class=\"doctor-info\">\r\n            <h3 class=\"doctor-name\">{{ doctor.username }}</h3>\r\n            <p class=\"doctor-title\">{{ doctor.title || '主治医师' }}</p>\r\n            <p class=\"doctor-exp\">从医经验：{{ doctor.experience || '5' }}年</p>\r\n            <div class=\"doctor-comment\">{{ doctor.comment || '专业医师，热心为患者服务' }}</div>\r\n            <el-button type=\"primary\" @click=\"handleAppointment(doctor)\">预约挂号</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Doctors',\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true,\r\n      validator: value => !isNaN(value)\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      doctors: [],\r\n      departmentName: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (!isNaN(this.id)) {\r\n      this.getDoctors()\r\n      this.getDepartmentInfo()\r\n    } else {\r\n      this.$message.error('无效的科室ID')\r\n      this.$router.push('/home/departments')\r\n    }\r\n  },\r\n  methods: {\r\n    async getDoctors() {\r\n      try {\r\n        const departmentId = Number(this.$route.params.id);\r\n        if (isNaN(departmentId)) {\r\n          this.$message.error('无效的科室ID');\r\n          return;\r\n        }\r\n        console.log('正在获取科室ID为', departmentId, '的医生列表');\r\n        const { data: response } = await this.$http.get('/api/empinfo/findByDid', {\r\n          params: {\r\n            departmentid: departmentId\r\n          }\r\n        });\r\n        console.log('API响应:', response);\r\n        if (response.code === 200) {\r\n          this.doctors = response.data;\r\n        } else {\r\n          this.$message.error(response.message || '获取医生列表失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取医生列表错误:', error);\r\n        this.$message.error('获取医生列表失败，请稍后重试');\r\n      }\r\n    },\r\n    async getDepartmentInfo() {\r\n      try {\r\n        const departmentId = Number(this.$route.params.id);\r\n        if (isNaN(departmentId)) {\r\n          this.$message.error('无效的科室ID');\r\n          return;\r\n        }\r\n        console.log('正在获取科室信息，ID:', departmentId);\r\n        const { data: response } = await this.$http.get('/api/departmentinfo/findById', {\r\n          params: {\r\n            id: departmentId\r\n          }\r\n        });\r\n        console.log('科室信息响应:', response);\r\n        if (response.code === 200) {\r\n          this.departmentName = response.data.departmentname;\r\n        } else {\r\n          this.$message.error(response.message || '获取科室信息失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取科室信息失败:', error);\r\n        this.$message.error('获取科室信息失败');\r\n      }\r\n    },\r\n    handleAppointment(doctor) {\r\n      this.$router.push(`/home/appointment/${doctor.id}`);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctors-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.doctor-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.doctor-card {\r\n  margin-bottom: 20px;\r\n  height: 400px;\r\n}\r\n\r\n.doctor-avatar {\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.doctor-avatar img {\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.doctor-avatar i {\r\n  font-size: 120px;\r\n  color: #dcdfe6;\r\n}\r\n\r\n.doctor-info {\r\n  text-align: center;\r\n}\r\n\r\n.doctor-name {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.doctor-title {\r\n  color: #409EFF;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.doctor-exp {\r\n  color: #606266;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.doctor-comment {\r\n  color: #909399;\r\n  margin-bottom: 15px;\r\n  height: 60px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n}\r\n</style>\r\n"],"mappings":";;;;AA0BA;EACAA,IAAA;EACAC,KAAA;IACAC,EAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,SAAA,WAAAA,UAAAC,KAAA;QAAA,QAAAC,KAAA,CAAAD,KAAA;MAAA;IACA;EACA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAJ,KAAA,MAAAN,EAAA;MACA,KAAAW,UAAA;MACA,KAAAC,iBAAA;IACA;MACA,KAAAC,QAAA,CAAAC,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAN,UAAA,WAAAA,WAAA;MAAA,IAAAO,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,YAAA,EAAAC,qBAAA,EAAAC,QAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAEAN,YAAA,GAAArB,MAAA,CAAAgB,KAAA,CAAAa,MAAA,CAAAC,MAAA,CAAAhC,EAAA;cAAA,KACAM,KAAA,CAAAiB,YAAA;gBAAAK,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAZ,KAAA,CAAAL,QAAA,CAAAC,KAAA;cAAA,OAAAc,QAAA,CAAAK,MAAA;YAAA;cAGAC,OAAA,CAAAC,GAAA,cAAAZ,YAAA;cAAAK,QAAA,CAAAE,IAAA;cAAA,OACAZ,KAAA,CAAAkB,KAAA,CAAAC,GAAA;gBACAL,MAAA;kBACAM,YAAA,EAAAf;gBACA;cACA;YAAA;cAAAC,qBAAA,GAAAI,QAAA,CAAAW,IAAA;cAJAd,QAAA,GAAAD,qBAAA,CAAAjB,IAAA;cAKA2B,OAAA,CAAAC,GAAA,WAAAV,QAAA;cACA,IAAAA,QAAA,CAAAe,IAAA;gBACAtB,KAAA,CAAAV,OAAA,GAAAiB,QAAA,CAAAlB,IAAA;cACA;gBACAW,KAAA,CAAAL,QAAA,CAAAC,KAAA,CAAAW,QAAA,CAAAgB,OAAA;cACA;cAAAb,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;cAEAM,OAAA,CAAApB,KAAA,cAAAc,QAAA,CAAAc,EAAA;cACAxB,KAAA,CAAAL,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAAc,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAArB,OAAA;MAAA;IAEA;IACAV,iBAAA,WAAAA,kBAAA;MAAA,IAAAgC,MAAA;MAAA,OAAAzB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAwB,SAAA;QAAA,IAAAtB,YAAA,EAAAuB,qBAAA,EAAArB,QAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAqB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;YAAA;cAAAkB,SAAA,CAAAnB,IAAA;cAEAN,YAAA,GAAArB,MAAA,CAAA0C,MAAA,CAAAb,MAAA,CAAAC,MAAA,CAAAhC,EAAA;cAAA,KACAM,KAAA,CAAAiB,YAAA;gBAAAyB,SAAA,CAAAlB,IAAA;gBAAA;cAAA;cACAc,MAAA,CAAA/B,QAAA,CAAAC,KAAA;cAAA,OAAAkC,SAAA,CAAAf,MAAA;YAAA;cAGAC,OAAA,CAAAC,GAAA,iBAAAZ,YAAA;cAAAyB,SAAA,CAAAlB,IAAA;cAAA,OACAc,MAAA,CAAAR,KAAA,CAAAC,GAAA;gBACAL,MAAA;kBACAhC,EAAA,EAAAuB;gBACA;cACA;YAAA;cAAAuB,qBAAA,GAAAE,SAAA,CAAAT,IAAA;cAJAd,QAAA,GAAAqB,qBAAA,CAAAvC,IAAA;cAKA2B,OAAA,CAAAC,GAAA,YAAAV,QAAA;cACA,IAAAA,QAAA,CAAAe,IAAA;gBACAI,MAAA,CAAAnC,cAAA,GAAAgB,QAAA,CAAAlB,IAAA,CAAA0C,cAAA;cACA;gBACAL,MAAA,CAAA/B,QAAA,CAAAC,KAAA,CAAAW,QAAA,CAAAgB,OAAA;cACA;cAAAO,SAAA,CAAAlB,IAAA;cAAA;YAAA;cAAAkB,SAAA,CAAAnB,IAAA;cAAAmB,SAAA,CAAAN,EAAA,GAAAM,SAAA;cAEAd,OAAA,CAAApB,KAAA,cAAAkC,SAAA,CAAAN,EAAA;cACAE,MAAA,CAAA/B,QAAA,CAAAC,KAAA;YAAA;YAAA;cAAA,OAAAkC,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEA;IACAK,iBAAA,WAAAA,kBAAAC,MAAA;MACA,KAAApC,OAAA,CAAAC,IAAA,sBAAAoC,MAAA,CAAAD,MAAA,CAAAnD,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}